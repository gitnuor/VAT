// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace vms.entity.models;

public partial class OrgBranch
{
    public int OrgBranchId { get; set; }

    public int OrgBranchTypeId { get; set; }

    public int OrganizationId { get; set; }

    public string Name { get; set; }

    public string Code { get; set; }

    public int CustomsAndVatcommissionarateId { get; set; }

    public int FinancialActivityNatureId { get; set; }

    public int BusinessNatureId { get; set; }

    public int BusinessCategoryId { get; set; }

    public string BusinessCategoryDescription { get; set; }

    public bool IsSellStandardVatProduct { get; set; }

    public string EmailAddress { get; set; }

    public string Mobile { get; set; }

    public string Address { get; set; }

    public int CountryId { get; set; }

    public int? DistrictId { get; set; }

    public string VatResponsiblePersonName { get; set; }

    public string VatResponsiblePersonDesignation { get; set; }

    public string VatResponsiblePersonMobileNo { get; set; }

    public string VatResponsiblePersonEmailAddress { get; set; }

    public string VatResponsiblePersonSignUrl { get; set; }

    public bool IsActive { get; set; }

    public int? PostalCode { get; set; }

    public int? CreatedBy { get; set; }

    public DateTime? CreatedTime { get; set; }

    public int? ModifiedBy { get; set; }

    public DateTime? ModifiedTime { get; set; }

    public long? ApiTransactionId { get; set; }

    public string ReferenceKey { get; set; }

    public long? ExcelDataUploadId { get; set; }

    public virtual ICollection<BranchTransferReceive> BranchTransferReceiveOrgBranchReceivers { get; set; } = new List<BranchTransferReceive>();

    public virtual ICollection<BranchTransferReceive> BranchTransferReceiveOrgBranchSenders { get; set; } = new List<BranchTransferReceive>();

    public virtual ICollection<BranchTransferSend> BranchTransferSendOrgBranchReceivers { get; set; } = new List<BranchTransferSend>();

    public virtual ICollection<BranchTransferSend> BranchTransferSendOrgBranchSenders { get; set; } = new List<BranchTransferSend>();

    public virtual ICollection<ByProductReceive> ByProductReceives { get; set; } = new List<ByProductReceive>();

    public virtual Country Country { get; set; }

    public virtual ICollection<CustomerBranch> CustomerBranches { get; set; } = new List<CustomerBranch>();

    public virtual ICollection<CustomerSubscription> CustomerSubscriptionCollectionOffices { get; set; } = new List<CustomerSubscription>();

    public virtual ICollection<CustomerSubscription> CustomerSubscriptionOrgBranches { get; set; } = new List<CustomerSubscription>();

    public virtual District District { get; set; }

    public virtual OrgBranchType OrgBranchType { get; set; }

    public virtual Organization Organization { get; set; }

    public virtual ICollection<ProductOpeningBalance> ProductOpeningBalances { get; set; } = new List<ProductOpeningBalance>();

    public virtual ICollection<ProductTransactionBook> ProductTransactionBooks { get; set; } = new List<ProductTransactionBook>();

    public virtual ICollection<ProductUsedInService> ProductUsedInServices { get; set; } = new List<ProductUsedInService>();

    public virtual ICollection<ProductionReceive> ProductionReceives { get; set; } = new List<ProductionReceive>();

    public virtual ICollection<Purchase> Purchases { get; set; } = new List<Purchase>();

    public virtual ICollection<Sale> Sales { get; set; } = new List<Sale>();

    public virtual ICollection<SalesPriceAdjustment> SalesPriceAdjustments { get; set; } = new List<SalesPriceAdjustment>();

    public virtual ICollection<SubscriptionBill> SubscriptionBillCollectionOffices { get; set; } = new List<SubscriptionBill>();

    public virtual ICollection<SubscriptionBill> SubscriptionBillOrgBranches { get; set; } = new List<SubscriptionBill>();

    public virtual ICollection<UserBranch> UserBranches { get; set; } = new List<UserBranch>();

    public virtual ICollection<VendorBranch> VendorBranches { get; set; } = new List<VendorBranch>();
}