@model vms.entity.models.Sale

@{
    ViewData["Title"] = "Details";
}
<input type="hidden" class="form-control" id="SalesId" name="SalesId" value="@Model.SalesId" />

<input type="hidden" class="form-control" id="ProductId" name="ProductId" />
<h2>Sale Order Info</h2>

<div class="row">

    <div class="col-md-12 ">
        <div class="col-md-5 ">
            <div class="col-md-12 ">
                <div class="form-group">

                    <label for="form_control">Customer : @Model.Customer.Name</label>
                </div>
            </div>

            

            <div class="col-md-12 ">
                <div class="form-group">

                    <label for="form_control">WorkOrderNo : @Model.WorkOrderNo</label>
                </div>
            </div>
            <div class="col-md-12 ">
                <div class="form-group">
                    <label for="form_control_1">Shipping Address : @Model.ShippingAddress</label>
                </div>
            </div>

            <div class="col-md-12 ">
                <div class="form-group ">

                    <label for="form_control_1">Sales Type : @Model.SalesType.SalesTypeName</label>
                </div>
            </div>
        </div>

        <div class="col-md-5 ">
            <div class="col-md-12 ">
                <div class="form-group">

                    <label for="form_control_1">S.D.Type : @Model.SalesDeliveryType.Name</label>
                </div>
            </div>
            <div class="col-md-12 ">
                <div class="form-group">

                    <label for="form_control_1">Export Type : @Model.ExportType.ExportTypeName</label>
                </div>
            </div>

            <div class="col-md-12 ">
                <div class="form-group">

                    <label for="form_control_1">Expt.D. Date : @Model.ExpectedDeliveryDate</label>
                </div>
            </div>
            <div class="col-md-12 ">
                <div class="form-group">

                    <label for="form_control_1">D.Date : @Model.DeliveryDate</label>
                </div>
            </div>

            <div class="col-md-12 ">
                <div class="form-group">

                    <label for="form_control_1">Invoice No. : @Model.InvoiceNo</label>
                </div>
            </div>
            
        </div>

        <div class="col-md-2 ">

            <a href="@Url.Action("#", "#")" class="btn btn-danger btn-sm pull-right mt-2"><i class="bi bi-printer"></i> Print Mushak 6.2 </a>
        </div>
    </div>

</div>
<h2>Sale Order Details</h2>
<div class="col-md-12 ">

    <table class="table table-bordered" id="gridTable">
        <thead>
            <tr>
                <th>Serial</th>
                <th>Product</th>
                <th>Vendor</th>
                <th>Invoice No.</th>
                <th>Qty</th>
                <th>InitialAmount</th>
                <th>Amount</th>
                <th class="prgbarwidth">Unit</th>
                <th> Price</th>
                <th>VAT(%)</th>
                <th>VAT Value</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>

        <tbody id="tblPurchaseOD"></tbody>
        <tfoot>
            <tr>
                <td colspan="10">Total</td>

                <td colspan="1"><label id="TotalVat" name="TotalVat" /></td>

                <td><label id="TotalPrice" name="TotalPrice" /></td>

                <td></td>
            </tr>
        </tfoot>
    </table>
</div>

@section Scripts{
    <script src="~/js/typeahead.bundle.js"></script>
    <script src="~/js/jquery-ui.js"></script>
    <script>

        var SalesOrder = {
            init: function() {},
            count: 1,
            unitAmount: 0,
            totalPrice: 0,
            totalVat: 0,
            SaleOrderDetailList: [],
            item: [],
            getSaleOrder: function () {
                var id = $('#SalesId').val();
                $.ajax({
                    url: '@Url.Content("~/Sales/GetSaleDetails")',
                    type: 'Get',
                    data: { saleId: id },
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        $.each(result, function (i, v) {
                             ExistingItems(result[i],i+1);
                        });
                    },
                    error: function (x, e) {
                        alert(e);
                    }
                });
            },

            gridTableEmpty: function() {
                $('#ProductId').val('');
                $('#Product').val('');
                $('#Amount').val('');
                $('#item').val('');
                $('#amount').val('');
                $('#VAT').val('');
            },
            isNumber:function (n) {
                return !isNaN(parseFloat(n)) && isFinite(n);
            },
            CalculateTotalPriceAndVat: function(totalPrice,totalVat) {
                SalesOrder.totalPrice += totalPrice;
                SalesOrder.totalVat += totalVat;
                $('#TotalPrice').text(Math.round(SalesOrder.totalPrice));
                $('#TotalVat').text(Math.round(SalesOrder.totalVat));
            },
            add: function () {

                var productName = $('#Product').val();
                var productId = $('#ProductId').val();
                var vendor = $('#VendorId option:selected').text();
                var vendorId = $('#VendorId').val();
                var PurchaseInvoice = $('#PurchaseInvoice').val();
                var item = $('#item').val();
                var InitialAmount = $('#InitialAmount').val();
                var amount = $('#amount').val();
                var vatPercent = $('#VAT').val();
                var unit = $('#unit option:selected').text();
                var unitId = $('#unit').val();
                var unitAmount = $('#Amount').val();

                if (productId>0) {

                    var canAdd = true;

                    $.each(SalesOrder.SaleOrderDetailList,
                        function (i, v) {
                            if (SalesOrder.SaleOrderDetailList[i].ProductId == productId) {
                                alert('Sorry! product Order Exists.');
                                canAdd = false;

                            }

                        });
                    if (!parseInt(item)) {
                        alert('Number of item is inValid!');
                        canAdd = false;
                    }
                    if (!parseInt(amount)) {
                        alert('Amount of item is inValid!');
                        canAdd = false;
                    }
                    if (canAdd) {

                        if (!SalesOrder.isNumber(vatPercent)) {
                            return alert("Input VAT %");
                        }
                        var vat = parseFloat(vatPercent) / 100;
                        var data = new Object();
                        data.ProductId = productId;
                        data.SalesId = 0;
                        data.ProductVattypeId = 1;
                        data.Iteams = item;
                        data.Amount = amount;
                        data.Vat = vatPercent;
                        data.InitialQty = InitialAmount;
                        data.MeasurementUnitId = 3;
                        data.PurchaseVendorId = vendorId;
                        data.PurchaseInvoice = PurchaseInvoice;
                        data.CreatedBy =3
                        data.CreatedTime ='2019-01-15'
                        var vatValue = parseFloat(amount);
                        vatValue = Math.ceil(vatValue * (vat));
                        var total = parseFloat(amount) + vatValue;
                        data.totalPrice = total;
                        data.totalVat = vatValue;
                        SalesOrder.SaleOrderDetailList.push(data);

                        var html = '<tr id="' +
                            data.ProductId +
                            '">' +
                            '<td>' +
                            SalesOrder.count +
                            '</td>' +
                            '<td>' +
                            productName +
                            '</td>' +
                            '<td>' +
                            vendor +
                            '</td>' +
                            '<td>' +
                            PurchaseInvoice +
                            '</td>' +
                            '<td>' +
                            item +
                            '</td>' +
                            '<td>' +
                            InitialAmount +
                            '</td>' +
                            '<td>' +
                            amount +
                            '</td>' +
                            '<td>' +
                            unit +
                            '</td>' +
                            '<td>' +
                            unitAmount+
                            '</td>' +

                            '<td>' +
                            vatPercent +
                            '</td>' +

                            '<td>' +
                            vatValue +
                            '</td>' +
                            '<td>' +
                            total +
                            '</td>' +
                            '<td><span onclick="Delete(' +
                            data.ProductId +
                            ')"  class="btn-xs glyphicon glyphicon-minus"></a></span></td>';

                        html += '</tr>';

                        $("table#gridTable > tbody").append(html);
                        SalesOrder.CalculateTotalPriceAndVat(total, vatValue);
                        SalesOrder.gridTableEmpty();
                        SalesOrder.count++;

                    }
                }

            },

            delete: function (id) {
                for (var key in SalesOrder.SaleOrderDetailList) {
                    var value = SalesOrder.SaleOrderDetailList[key].ProductId;
                    if (SalesOrder.SaleOrderDetailList[key].ProductId == id) {
                        SalesOrder.CalculateTotalPriceAndVat(-SalesOrder.SaleOrderDetailList[key].totalPrice, -SalesOrder.SaleOrderDetailList[key].totalVat);
                    }
                }
                $.each(SalesOrder.SaleOrderDetailList,
                    function (i, v) {
                        if (SalesOrder.SaleOrderDetailList[i].ProductId == id) {
                            SalesOrder.SaleOrderDetailList.splice(i, 1);
                        }
                        $("tr#" + id).remove().fadeOut();

                    });

            },
            calculate: function (value) {

                var unitAmount = $('#amount').val();
                if (!SalesOrder.isNumber(unitAmount) || !(SalesOrder.isNumber(value))) {
                    return; 
                } else {
                    $("#Amount").val(Math.ceil(unitAmount / value));
                }

            },
            calculateUnitPrice: function (value) {
                var qty = $('#item').val();
                if (!SalesOrder.isNumber(qty) || !(SalesOrder.isNumber(value))) {
                    return; 
                } else {
                    $("#Amount").val(Math.floor(value / qty));
                }

            },
            Save: function () {
                var CustomerId = $('#CustomerId').val();
                var SalesId = $('#SalesId').val();
                var CustomerContactNo = $('#CustomerContactNo').val();
                var WorkOrderNo = $('#WorkOrderNo').val();
                var ShippingAddress = $('#ShippingAddress').val();
                var CountryId = $('#CountryId').val();
                var SalesTypeId = $('#SalesTypeId').val();
                var ExportTypeId = $('#ExportTypeId').val();
                var Amount = $('#PurchaseAmount').val();
                var ExpectedDeleveryDate = $('#ExpectedDeleveryDate').val();
                var DeliveryDate = $('#DeliveryDate').val();
                var Iteams = $('#PurchaseIteams').val();
                var Vat = $('#PurchaseVat').val();
                var Discount = $('#Discount').val();
                var SalesDeliveryTypeId = $('#SalesDeliveryTypeId').val();
                var reqEntry = new Object();
                reqEntry.SaleOrderDetailList = SalesOrder.SaleOrderDetailList;
                reqEntry.OrganizationId=1;
                reqEntry.ExpectedDeleveryDate=ExpectedDeleveryDate;
                reqEntry.CustomerId=CustomerId;
                reqEntry.CustomerContactNo = CustomerContactNo;
                reqEntry.Discount=Discount;
                reqEntry.IsComplete=1;
                reqEntry.WorkOrderNo = WorkOrderNo;
                reqEntry.ShippingAddress = ShippingAddress;
                reqEntry.CountryId = CountryId;
                reqEntry.SalesTypeId = SalesTypeId;
                reqEntry.CreatedBy=3;
                reqEntry.ExportTypeId = ExportTypeId;
                reqEntry.DeliveryDate = DeliveryDate;
                reqEntry.SalesDeliveryTypeId = SalesDeliveryTypeId;
                reqEntry.Flag = 1;
                reqEntry.SalesId = SalesId;
                $.ajax({
                    url: '@Url.Action("CreateAsync", "Sales")',
                    dataType: "json",
                    type: "POST",
                    data: { vmSale: reqEntry },
                    beforeSend: function () {
                        $("#loading").show();
                    },
                    success: function (result) {
                        $("#loading").hide();

                        if (result == false) {
                            alert("Please add atleast on purchase Details");
                        }
                        else {
                            window.location.href = '@Url.Action("Index", "Sales")';
                        }
                    },
                    error: function (x, e) {
                        $("#loading").hide();
                        alert('error');
                    }
                });
            },
            product : {
                init: function () { },
                productAutoComplete: function () {
                    var materialforrequsition = {
                        Initialize: function () {
                            materialforrequsition.Typehead();
                        },

                        Typehead: function () {
                            $('#Product').typeahead('destroy');
                            $('#Product').typeahead({
                                    hint: true,
                                    highlight: true,
                                    minLength: 2,
                                },
                                {
                                    items: 8,
                                    name: 'Product',
                                    displayKey: function (s) {
                                        return s.name;
                                    },
                                    property: "ProductId",
                                    source: function (strmaterial, process) {
                                        var url = '@Url.Content("~/Products/ProductAutoComplete")';
                                        return $.getJSON(url, { filterText: $("#Product").val() }, function (Data) {

                                            return process(Data);
                                        });
                                    },
                                    updater: function (item) {
                                        return item.name;
                                    }
                                }).on('typeahead:selected', function (obj, datum) {

                                    $("#ProductId").val(datum.id);
                                    $('#Amount').val('');
                                     $('#item').val('');
                                    $('#amount').val('');
                                    $('#VAT').val(datum.vat);
                                   SalesOrder.unitAmount = 0;

                            });
                            $("#Product").focus();

                        }
                    }
                    materialforrequsition.Initialize();
                }
            }
        }

        $(document).ready(function() {
            $('#add').click(function() {
                SalesOrder.add();
            });

            $('#save').click(function () {
                SalesOrder.Save();
            });

            $("#ExpectedDeleveryDate").datepicker();
            $("#ExpectedDeleveryDate").datepicker('option', 'dateFormat', 'dd M, yy');

            $("#DeliveryDate").datepicker();
            $("#DeliveryDate").datepicker('option', 'dateFormat', 'dd M, yy');
            SalesOrder.product.productAutoComplete();
            SalesOrder.getSaleOrder();
        });

        function Delete(id) {
            SalesOrder.delete(id);
        }

        $("#item").keyup(function () {
            var that = this,
            numberOfItem = $(this).val();
            SalesOrder.calculate(numberOfItem);

        });

        $("#amount").keyup(function () {
            var that = this,
                amount = $(this).val();
            SalesOrder.calculateUnitPrice(amount);

        });
        function ExistingItems(result,i) {

            if (result.productId > 0) {

                var data = new Object();
                data.ProductId = result.productId;
                data.SalesId = result.salesId;
                data.ProductVattypeId = result.productVattypeId;
                data.Iteams = result.iteams;
                data.Amount = result.amount;
                data.Vat = (result.vat / result.amount)*100;
                data.InitialAmount = result.initialAmount;
                data.MeasurementUnitId = result.measurementUnitId;
                data.PurchaseVendorId = result.purchaseVendorId;
                data.PurchaseInvoice = result.purchaseInvoice;
                data.CreatedBy = result.createdBy;
                data.CreatedTime = result.createdTime;
                var unitPrice = result.amount / result.iteams;
                var vatValue = result.amount * (data.Vat / 100);
                var total = result.amount + vatValue
                data.totalPrice = total;
                data.totalVat = vatValue;
                SalesOrder.SaleOrderDetailList.push(data);

                var html = '<tr id="' +
                    data.ProductId +
                    '">' +
                    '<td>' +
                    i +
                    '</td>' +
                    '<td>' +
                    result.productName +
                    '</td>' +
                    '<td>' +
                    result.purchaseVendorId +
                    '</td>' +
                    '<td>' +
                    result.purchaseInvoice +
                    '</td>' +
                    '<td>' +
                    result.iteams +
                    '</td>' +
                    '<td>' +
                    result.initialAmount +
                    '</td>' +
                    '<td>' +
                    result.amount +
                    '</td>' +
                    '<td>' +
                    result.unit +
                    '</td>' +
                    '<td>' +
                    unitPrice+
                    '</td>' +

                    '<td>' +
                    data.Vat +
                    '</td>' +

                    '<td>' +
                   vatValue +
                    '</td>' +
                    '<td>' +
                    total +
                    '</td>' +
                    '<td></td>';

                html += '</tr>';

                $("table#gridTable > tbody").append(html);
                SalesOrder.CalculateTotalPriceAndVat(total, vatValue);
                SalesOrder.gridTableEmpty();

            }

        }
    </script>

}