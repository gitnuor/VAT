@model IEnumerable<vms.entity.models.Purchase>
@{
    var session = Context.Session.GetComplexData<VmUserSession>(ControllerStaticData.SESSION);
}
@{
    ViewData["Title"] = "VdsIndex";
}

@using (Html.BeginForm("VdsIndex", "Purchase", FormMethod.Get, new { id = "frmPurchase" }))
{
    <div class="row">
        <div class="col-md-6">
            <h1 class="custom-page-title">Purchase VDS List</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <div class="input-group Search margin-top-40">
                @Html.CheckBox("IsShowAll")Show All VDS
            </div>
        </div>
        <div class="col-md-2">
            <div class="input-group Search margin-top-10">
                <label>Vendor</label>
                <input type="text" class="form-control form-control-sm" id="Vendor" name="Vendor" value="@ViewBag.Vendor">
            </div>
        </div>
        <div class="col-md-2">
            <div class="input-group Search margin-top-10">
                <label>Invoice</label>
                <input type="text" class="form-control form-control-sm" id="search" name="search" placeholder="Search..." value="@ViewBag.searchText">
            </div>
        </div>
        <div class="col-md-2">
            <div class="input-group Search margin-top-10">
                <label>From Date</label>

                <input type="text" class="form-control form-control-sm" id="FromDate" name="FromDate" value="@ViewBag.FromDate">
            </div>
        </div>
        <div class="col-md-2">
            <div class="input-group Search margin-top-10">
                <label>To Date</label>
                <input type="text" class="form-control form-control-sm" id="ToDate" name="ToDate" value="@ViewBag.ToDate">
            </div>
        </div>
        <div class="col-md-2">
            <div class="input-group Search mt-4">

                <button type="submit" class="btn submit btn-sm">
                    <i class="icon-magnifier"></i>
                </button>
            </div>
        </div>
    </div>
}
<table class="table  table-bordered">
    <thead>
        <tr>
            <th>
                Inv. No.
            </th>
            <th class="table-date-cell">
                Purchase Date
            </th>

            <th>
                Tax Inv. No
            </th>

            <th class="table-date-cell">
                Tax Inv. Time
            </th>
            <th>
                Vendor Name
            </th>
            <th>
                Price without VAT
            </th>
            <th>
                VAT
            </th>
            <th>
                VDS Amount
            </th>

            <th class="table-boolean-cell">
                Is VDS Cert. Received?
            </th>

            <th class="table-action-cell"></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Any())
        {

            foreach (var item in Model)
            {

                <tr class="@(item.IsVdscertificatePrinted == true ? "warning" : "")">

                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.InvoiceNo)
                    </td>
                    <td class="text-center">
                        @StringGenerator.DateTimeToString(item.PurchaseDate, false)
                    </td>

                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.VatChallanNo)
                    </td>

                    <td class="text-center">
                        @StringGenerator.DateTimeToString(item.VatChallanIssueDate)
                    </td>

                    <td class="text-left">
                        @Html.DisplayFor(modelItem => item.Vendor.Name)
                    </td>

                    <td class="text-right">
                        @StringGenerator.DecimalToCommaSeparated(item.TotalPriceWithoutVat)
                    </td>

                    <td class="text-right">
                        @StringGenerator.DecimalToCommaSeparated(item.TotalVat)
                    </td>

                    <td class="text-right">
                        @StringGenerator.DecimalToCommaSeparated(item.Vdsamount)
                    </td>

                    <td class="text-center">
                        @StringGenerator.BooleanToString(item.IsVdscertificatePrinted)
                    </td>
                    <td>
                        @if (item.IsVdscertificatePrinted != true)
                        {
                            <div class="nav navbar-nav ">
                                <div class="dropdown">
                                    <a href="javascript:;" class="dropdown-toggle text-decoration-none" data-bs-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                                        <span class="">
                                            Action
                                            <i class="fa fa-angle-down"></i>
                                        </span>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-default pull-right">

                                        @if (item.IsVatDeductedInSource == true)
                                        {

                                            string URL = ViewData["Report"].ToString() + item.PurchaseId;
                                            @if (UserAuthorization.Check(FeatureList.PURCHASE_PURCHASE_VDS_LIST_CAN_ADD_VDS_REPORT, session.Rights))
                                            {
                                                <li>

                                                    <a href="@URL" target="_blank"><i class="icon-user"></i> VDS Report</a>
                                                </li>
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="nav navbar-nav ">
                                <div class="dropdown">
                                    <a href="javascript:;" class="dropdown-toggle text-decoration-none" data-bs-toggle="dropdown" data-hover="dropdown" data-close-others="true">
                                        <span class="">
                                            Action
                                            <i class="fa fa-angle-down"></i>
                                        </span>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-default pull-right">

                                        @if (item.IsVatDeductedInSource == true)
                                        {

                                            string URL = ViewData["Report"].ToString() + item.PurchaseId;
                                            <li>

                                                <a href="@URL" target="_blank"><i class="icon-user"></i> VDS Report</a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        }
                    </td>
                </tr>

            }

        }

        else
        {
            <tr>
                <td colspan="10">
                    <p class="text-center">No Records Found</p>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="pager">
    @if ((int)ViewBag.PageCount <= 10)
    {

    }

    else
    {
        @*@Html.PagedListPager(
            (IPagedList)Model,
            page => Url.Action("VdsIndex", new { page })
            )*@
    }
</div>

@section Scripts{

    <script src="~/js/typeahead.bundle.js"></script>
    <script src="~/js/jquery-ui.js"></script>
    <script>

        $(document).ready(function () {
            $("#FromDate").datepicker();
            $("#FromDate").datepicker('option', 'dateFormat', 'dd/mm/yy');
            $("#ToDate").datepicker();
            $("#ToDate").datepicker('option', 'dateFormat', 'dd/mm/yy');
        });
    </script>

}